{"version":3,"sources":["static/poster_none.png","components/layout/Header.js","components/main/FilmElement.js","actions/index.js","types/index.js","components/main/FilmList.js","components/dialogs/FilmDialog.js","components/main/Main.js","components/App.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","withStyles","root","flexGrow","menuButton","marginLeft","marginRight","props","classes","react_default","a","createElement","className","AppBar_default","position","Toolbar_default","variant","IconButton_default","color","aria-label","Menu_default","Typography_default","FilmElement","getImageSrc","Poster","_this","film","poster_none","_this$props","this","selectFilm","GridListTile_default","onClick","gridListTile","src","alt","Title","GridListTileBar_default","title","subtitle","Year","Component","connect","selectedFilm","type","payload","icon","margin","width","height","theme","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","filmList","GridList_default","map","main_FilmElement","key","imdbID","FilmDialog","handleClose","resetSelectedFilm","_this2","initialFilm","Dialog_default","open","onClose","aria-labelledby","react_final_form_es","onSubmit","saveFilm","initialValues","Object","objectSpread","render","_ref","handleSubmit","react","noValidate","DialogTitle_default","id","DialogContent_default","autoFocus","fullWidth","name","component","TextField","label","DialogActions_default","Button_default","React","savedFilm","Main","getFilms","main_FilmList","dialogs_FilmDialog","state","axios","get","App","layout_Header","main_Main","initialState","createMuiTheme","typography","useNextVariants","store","createStore","arguments","length","undefined","action","data","Search","e","compose","applyMiddleware","apply","thunk","promise","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","es","MuiThemeProvider_default","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.470e19b5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/poster_none.4c0c4e8d.png\";","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -18,\r\n    marginRight: 10,\r\n  },\r\n};\r\n\r\nconst Header = props => {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar variant=\"dense\">\r\n          <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            Films\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Header);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport poster_none from \"../../static/poster_none.png\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectFilm } from \"../../actions\";\r\n\r\nconst styles = {\r\n  icon: {\r\n    color: 'rgba(255, 255, 255, 0.54)',\r\n  },\r\n  gridListTile: {\r\n    margin: 'auto',\r\n    width: 300,\r\n    height: 400,\r\n  },\r\n};\r\n\r\nclass FilmElement extends Component {\r\n  getImageSrc = () => {\r\n    const {Poster} = this.props.film;\r\n    if (!Poster || Poster === 'N/A') {\r\n      return poster_none\r\n    }\r\n    return Poster;\r\n  };\r\n\r\n  render() {\r\n    const {film, classes, selectFilm} = this.props;\r\n    return (\r\n      <GridListTile onClick={() => selectFilm(film)} className={classes.gridListTile}>\r\n        <img src={this.getImageSrc()} alt={film.Title}/>\r\n        <GridListTileBar\r\n          title={film.Title}\r\n          subtitle={<span>Year: {film.Year}</span>}\r\n        />\r\n      </GridListTile>\r\n    );\r\n  }\r\n}\r\n\r\nFilmElement.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  film: PropTypes.object.isRequired,\r\n  selectFilm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, {selectFilm})(withStyles(styles)(FilmElement));","import { GET_FILMS, RESET_SELECTED_FILM, SAVE_FILM, SELECT_FILM } from \"../types\";\r\nimport axios from 'axios';\r\n\r\n\r\nexport const getFilms = () => ({\r\n  type: GET_FILMS,\r\n  payload: axios.get('https://www.omdbapi.com/?apikey=792db8bc&s=marvel')\r\n})\r\n\r\nexport const selectFilm = selectedFilm => ({\r\n  type: SELECT_FILM,\r\n  payload: selectedFilm\r\n})\r\n\r\nexport const saveFilm = savedFilm => ({\r\n  type: SAVE_FILM,\r\n  payload: savedFilm\r\n})\r\n\r\nexport const resetSelectedFilm = () => ({\r\n  type: RESET_SELECTED_FILM,\r\n})\r\n\r\n","export const GET_FILMS = 'GET_FILMS';\r\nexport const GET_FILMS_FULFILLED = 'GET_FILMS_FULFILLED';\r\nexport const GET_FILMS_REJECTED = 'GET_FILMS_REJECTED';\r\n\r\nexport const RESET_SELECTED_FILM = 'RESET_SELECTED_FILM';\r\nexport const SELECT_FILM = 'SELECT_FILM';\r\nexport const SAVE_FILM = 'SAVE_FILM';\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport FilmElement from \"./FilmElement\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n});\r\n\r\nconst FilmList = props => {\r\n  const {filmList, classes} = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList>\r\n        {filmList.map(film =>\r\n          <FilmElement\r\n            key={film.imdbID}\r\n            film={film}\r\n          />)\r\n        }\r\n      </GridList>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilmList.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  filmList: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(FilmList)","import React, {Fragment} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {connect} from \"react-redux\";\r\nimport {resetSelectedFilm, saveFilm} from \"../../actions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Field, Form} from \"react-final-form\";\r\nimport {TextField} from 'final-form-material-ui';\r\n\r\nclass FilmDialog extends React.Component {\r\n\r\n  handleClose = () => {\r\n    this.props.resetSelectedFilm()\r\n  };\r\n\r\n  render() {\r\n    const {initialFilm} = this.props\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={!!initialFilm}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <Form\r\n            onSubmit={this.props.saveFilm}\r\n            initialValues={{...initialFilm}}\r\n            render={({handleSubmit}) => (\r\n              <Fragment>\r\n                <form onSubmit={handleSubmit} noValidate>\r\n                  <DialogTitle id=\"form-dialog-title\">Edit film</DialogTitle>\r\n                  <DialogContent>\r\n                    <Field\r\n                      autoFocus\r\n                      fullWidth\r\n                      name=\"Title\"\r\n                      component={TextField}\r\n                      type=\"text\"\r\n                      label=\"Title\"\r\n                    />\r\n                    <Field\r\n                      fullWidth\r\n                      name=\"Year\"\r\n                      component={TextField}\r\n                      type=\"number\"\r\n                      label=\"Year\"\r\n                    />\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button onClick={this.handleClose} color=\"primary\">\r\n                      Cancel\r\n                    </Button>\r\n                    <Button type=\"submit\" color=\"primary\">\r\n                      Save\r\n                    </Button>\r\n                  </DialogActions>\r\n                </form>\r\n              </Fragment>\r\n            )}\r\n          />\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFilmDialog.propTypes = {\r\n  defaultFilm: PropTypes.object,\r\n  resetSelectedFilm: PropTypes.func.isRequired,\r\n  saveFilm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, {resetSelectedFilm, saveFilm})(FilmDialog)","import React, { Component, Fragment } from \"react\";\r\nimport FilmList from \"./FilmList\";\r\nimport FilmDialog from \"../dialogs/FilmDialog\";\r\nimport { connect } from \"react-redux\";\r\nimport { getFilms } from \"../../actions\";\r\n\r\nclass Main extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.getFilms()\r\n  }\r\n\r\n  render() {\r\n    const {filmList, selectedFilm} = this.props\r\n    return (\r\n      <Fragment>\r\n        <FilmList filmList={filmList}/>\r\n        {selectedFilm &&\r\n          <FilmDialog initialFilm={selectedFilm}/>\r\n        }\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  filmList: state.filmList,\r\n  selectedFilm: state.selectedFilm,\r\n})\r\n\r\nexport default connect(mapStateToProps, {getFilms})(Main)","import React from 'react';\r\nimport Header from \"./layout/Header\";\r\nimport Main from \"./main/Main\";\r\n\r\nconst App = () => (\r\n  <div className=\"App\">\r\n    <Header/>\r\n    <Main/>\r\n  </div>\r\n);\r\n\r\nexport default App\r\n\r\n\r\n","import * as types from \"../types\";\r\n\r\nconst initialState = {\r\n  filmList: [],\r\n  selectedFilm: null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.GET_FILMS_FULFILLED:\r\n      return {...state, filmList: action.payload.data.Search}\r\n    case types.SELECT_FILM:\r\n      return {...state, selectedFilm: action.payload}\r\n    case types.SAVE_FILM:\r\n      const savedFilm = action.payload\r\n      return {...state,\r\n        selectedFilm: null,\r\n        filmList: state.filmList.map(e=>e.imdbID===savedFilm.imdbID ? savedFilm : e)\r\n      }\r\n    case types.RESET_SELECTED_FILM:\r\n      return {...state, selectedFilm: null}\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport { Provider } from \"react-redux\";\r\nimport { applyMiddleware, compose, createStore } from \"redux\";\r\nimport reducer from \"./reducers\";\r\nimport MuiThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\";\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\nimport thunk from 'redux-thunk';\r\nimport promise from 'redux-promise-middleware'\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {type: 'dark'},\r\n  typography: {useNextVariants: true},\r\n});\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  compose(\r\n    applyMiddleware(...[thunk, promise]),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <MuiThemeProvider theme={theme}>\r\n      <App/>\r\n    </MuiThemeProvider>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}